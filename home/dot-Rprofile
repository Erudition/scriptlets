if (dir.exists("/opt/cran")) {
  options(repos=c(CRAN="file:///opt/cran"))
} else {
  options(repos=c(CRAN="https://cran.rstudio.com"))
}

if (requireNamespace("ulimit", quietly = TRUE)) invisible(ulimit::memory_limit(6000))

if (interactive()) {
  cat("Working directory:", getwd(), "\n")
  require(magrittr)

  invisible(
    reg.finalizer(
      .GlobalEnv,
      eval(bquote(function(e) try(savehistory(file.path(.(getwd()), ".Rhistory"))))),
      onexit = TRUE))
}

options(
  devtools.name = "Kirill Müller",
  devtools.desc.author = 'person("Kirill", "Müller", role = c("aut", "cre"), email = "krlmlr+r@mailbox.org")',
  devtools.desc.license = "GPL-3",
  devtools.desc = list(
    Encoding = "UTF-8",
    Version = "0.0-0",
    Date = Sys.Date(),
    BugReports = paste0("https://github.com/krlmlr/", basename(getwd()), "/issues"),
    URL = paste0("https://github.com/krlmlr/", basename(getwd()), ", http://krlmlr.github.io/", basename(getwd())),
    Roxygen = "list(markdown = TRUE)"
  ),
  devtools.install.args = "--install-tests",
  devtools.revdep.libpath = "~/R-revdep",

  warnPartialMatchAttr = TRUE,
  warnPartialMatchDollar = TRUE,
  #warnPartialMatchArgs = TRUE,
  max.print = 100L,
  keep.source = TRUE,
  keep.source.pkgs = TRUE,

  mc.cores = 8,

  tibble.max_extra_cols = 30L
)

options(error = expression({traceback(1); if (!interactive()) q(status = 1)}))
#requireNamespace("tracer", quietly = TRUE)
#options(error = expression({tracer::tb(); if (!interactive()) q(status = 1)}))
options(deparse.max.lines = 2)

check_local_env <- function(path) {
  found <- FALSE

  lib_path <- file.path(path, ".lib")
  if (dir.exists(lib_path)) {
    .libPaths(c(normalizePath(lib_path), .libPaths()))
    options(prompt = paste0(basename(getwd()), "> "))
    message("Packages in local lib: ", paste(dir(lib_path), collapse = ", "))
    found <- TRUE
  }

  makevars_path <- file.path(path, "Makevars")
  if (file.exists(makevars_path)) {
    Sys.setenv(R_MAKEVARS_USER = normalizePath(makevars_path))
    message("Compiling with: \n", paste(readLines(makevars_path), collapse = "\n"))
    found <- TRUE
  }

  if (file.exists(".Rprofile.local")) {
    source(".Rprofile.local", chdir = TRUE)
    found <- TRUE
  }

  invisible(found)
}

invisible(check_local_env(".") || check_local_env(".."))

if (file.exists("~/.Rprofile.private")) {
  source("~/.Rprofile.private", chdir = TRUE)
}
